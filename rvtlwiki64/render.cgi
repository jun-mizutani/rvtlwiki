#!/usr/bin/rvtlw

10020 :-------------------------------------------------------------
10030 : RvtlWiki (render.cgi)
10040 : version : 2.00 (64bit) 2015/09/19
10050 : Copyright (C) 2005-2015
10060 :   Jun Mizutani <mizutani.jun@nifty.ne.jp> http://www.mztn.org/
10070 : & Toshio Moritake <odinsroom@gmail.com> http://www.odin.hyork.net/
10080 :     RvtlWiki may be copied under the terms of the
10090 :     GNU General Public License.
10100 :------------------------------------------------------------
10110    M=256              : 最大ページサイズ(KB)
10120    *=*+(M*1024)       : メモリ拡張
10130    z=&                : heap top
10140    Y=z z=z+256        : Debug Switch
10150    Z=z z=z+256        : Buffer
10160    T=z z=z+(M*1024)   : text
10170    K=0
10180 :
10190    [=0                : 範囲チェックOFF
10200    Y*=\2              : 時間計測オプション
10210    ;=Y(0)<>0 !=^TimerStart
10220    Z*=\0 x=Z          : Wikiテキストファイル名
10230    !=^TextRead        : Wikiテキスト読み込み
10240    x={ y=}            : テキストデータ範囲設定
10250    !=^RendWikiData
10260    ;=Y(0)<>0 "<hr /><p> " !=^TimerStop "</p><hr />" /
10270    [=1
10280    #=-1
10290 :
10300 :-------------------------------------------------
10310 : テキストリード x=FileName, T=BufferTop
10320 : r=bytes read
10330 :-------------------------------------------------
10340 ^TextRead
10350    {=T
10360    )*=x            : read file
10370    r=}-{
10380 ]
10390 :
10400 :-------------------------------------------------
10410 : 部分文字列の比較   length(x) <= length(y)
10420 :
10430 : x の示す文字列が y の示す文字列と一致したら
10440 : r=文字列末または初めて異なる文字の位置
10450 : 一致していなければ r=0 を返す
10460 :-------------------------------------------------
10470 ^CompareStr
10480     +if
10490     i=-1
10500     f=0
10510     @
10520       i=i+1
10530       ;=(x(i)=y(i))&(x(i)=0) f=1  : 発見
10540       ;=x(i)<>y(i) f=2            : 違う
10550     @=((x(i)=0)|(f<>0))
10560     ;=i>0 ;=f=1 r=i
10570     ;=(x(i)=0)&(f=2)) r=i
10580     ;=(x(i)<>0) r=0
10590     -fi
10600 ]
10610 :
10620 :-----------------------------------------
10630 : 時間を測定するプログラムにマージして実行
10640 :   !=^TimerStart から !=^TimerStop の時間
10650 :   #=-1 の前に !=^TimerStop を置く事
10660 :   変数スタックに値を積むためすべての変数
10670 :   は影響を受けない。
10680 :-----------------------------------------
10690 :----------------------------------
10700 : 時間計測開始
10710 :----------------------------------
10720 ^TimerStart
10730     +=_  +=%
10740 ]
10750 :
10760 :----------------------------------
10770 : 時間計測終了、経過時間表示
10780 :----------------------------------
10790 ^TimerStop
10800     -UT X=_ Y=%
10810     D=X-T F=Y-U
10820     ;=(F<0) D=D-1 F=F+1000000
10830     "  time:" ?=D "." ?[6]=F "sec" /
10840 ]
10850 :
10860 :-------------------------------------------------
10870 : 文字列長の取得
10880 :
10890 : x に文字列を指定、ｒに文字数が返る
10900 :-------------------------------------------------
10910 ^StrLen
10920    x*=x
10930    r=%
10940 ]
10950 :
10960 :-------------------------------------------------
10970 : Copy String
10980 :
10990 :  x() : string1 (source)
11000 :  y() : string2 (destinnation)
11010 : return
11020 :  r   : length
11030 :-------------------------------------------------
11040 ^CopyStr
11050     y*=x
11060     r=%
11070 ]
11080 :
11090 :======================================================================
11100 : ----------------------------------------------------------
11110 :  Readering Wiki File Wikiファイルの出力
11120 :     (in) x : Wikiデータの開始アドレス
11130 :     (in) y : Wikiデータの終了アドレス
11140 : ----------------------------------------------------------
11150 ^RendWikiData
11160     +AEM
11170     A=x E=y M=3000
11180     !=^outputData
11190     -MEA
11200 ]
11210 :
11220 : ----------------------------------------------------------
11230 :  コメント欄の表示
11240 : ----------------------------------------------------------
11250 ^PutComment
11260    / "<div id='comment'>" /
11270    "<form action='rvtlwiki.cgi' method='post' ><fieldset>" /
11280    "<input type='hidden' name='page' value='" $*=\1 "'>" /
11290    : "<legend></legend> " /
11300    ;=K=1 "<small>コメント − ページの最上部に追加されます。</small>"
11310    ;=K=1 "<input type=submit name='AddTop' value='書き込み' ><br />" /
11320    ;=K=2 "<small> − ページの最下部に追加されます。</small>"
11330    ;=K=2 "<input type='submit' name='AddBottom' value='書き込み'><br />"
11340    "<textarea cols='80' rows='8' name='msg' >" /
11350    "</textarea><br />" /
11360    "</fieldset></form>" / "</div>"
11370    "<p>" "</p>" /
11380    Q=1
11390 ]
11400 :
11410 : ----------------------------------------------------------
11420 :  Output Data データ出力
11430 :     (in) A : ファイルの先頭アドレス
11440 :     (in) E : ファイルの終了アドレス
11450 :     (in) M : 最大行数
11460 : ----------------------------------------------------------
11470 ^outputData
11480     +bcdfijlmpszBCDGHJLMPQSTUW
11490     l=z z=z+(8*M)               : l[] 行頭アドレス
11500     p=z z=z+(8*M)
11510     s=z z=z+(4*M)               : s[] 行の文字数
11520     m=z z=z+(1*M)               : m() モード
11530     c=z z=z+(1*M)               : c() 見出しレベル、<pre>の種類など
11540     v=z z=z+(1*M)               : v() スキャンフラグ
11550     E=E+1 E(0)=10 B=0 D=0 G=0 T=0 U=0 V=0
11560     i=0 j=0 f=0 M=0
11570     :
11580   :Wikiデータ全体をスキャンして行数、行先頭、行長などを求める
11590     b=0 : pre内なら b>0
11600     i=A,E                                 : 1文字ずつのループ
11610       d=i(0)                              : 1文字取得
11620       ;=(f=0) f=1 j=j+1 L=i v(j)=0        : j=行番号 L=行頭アドレス
11630       ;=(d='[') ;=(i(1)='[') v(j)=1       : URL quote
11640       ;=(d='h') ;=(i(1)='t') ;=(i(2)='t') ;=(i(3)='p') v(j)=1 : http発見
11650       ;=(d=$27) ;=(i(1)=$27) v(j)=2       : '' 発見 (太字)
11660       ;=(d=13) i(0)=0                     : CR なら 0 に置き換え
11670       : 行末(LF)ならば 1行を解析し結果を行属性配列に保存
11680       ;=(d=10) f=0 i(0)=0 W=M !=^analyze
11690       ;=(d=10) l;j]=L p;j]=P s[j]=i-L m(j)=M c(j)=C
11700     @=i+1
11710     J=0 H=0
11720     ;=K<>0 !=^PutComment : analyze でコメント記入欄出力
11730   :目次の生成
11740     / "<div id='toc'>" /
11750     B=0
11760     i=1,j
11770       ;=(m(i)='B') B=1 : pre の内側は見出し無し
11780       ;=(m(i)='b') B=0
11790       ;=(m(i)='C')&(B=0) C=c(i) P=p;i] !=^setIndexRow
11800     @=i+1
11810     @
11820       ;=C>0  .=C*2 "</ul>" / C=C-1
11830     @=(C=0)
11840     "</div>" / / "<div id='main'>" /
11850   :出力
11860     J=0 M=0
11870     i=1,j                                 : 1行ずつのループ
11880       W=M
11890       L=l;i] P=p;i] S=s[i] M=m(i) C=c(i) Q=0 V=v(i)
11900       !=^outputOneLine
11910     @=i+1
11920   :Clean Up
11930     !=^setTableEndTag
11940     !=^setDefEndTag
11950     !=^setListEndTag
11960     !=^setParaEndTag
11970     !=^setCodeEndTag
11980     "</div>" /
11990   ^_outputData
12000     -WUTSQPMLJHGDCBzspmljifdcb
12010 ]
12020 :
12030 : ----------------------------------------------------------
12040 :  Analyze Line １行解析 (解析のみで出力はなし)
12050 :     (in) L : アクセス中の行の先頭アドレス
12060 :     (io) M : アクセス中の行のモード
12070 :     (io) W : 前のモード
12080 :     (io) C : カウンタ(Mの数値属性)
12090 :     (io) P : アクセス中の行のカーソル位置
12100 : ----------------------------------------------------------
12110 ^analyze
12120     +ic
12130     M='G' C=0 c=0
12140     : 行頭の1文字をチェック
12150     ;=(L(0)='-') #=^_pre_hr                            : pre か hr
12160     ;=b>0        #=^_endAnalyze           : pre 内なら行頭の記号は無視
12170     ;=(L(0)=$e2) #=^_jp_header                         : 見出し
12180     ;=(L(0)>'?') #=^_endAnalyze
12190     ;=(L(0)=0)   M='E' #=^_endAnalyze                  : 空行
12200     ;=(L(0)=' ') #=^_space #=^_endAnalyze              : 空白pre
12210     ;=(L(0)='*') #=^_header                            : 見出し
12220     ;=(L(0)=':') M='D' #=^_endAnalyze
12230     ;=(L(0)='.') M='T' #=^_endAnalyze
12240     ;=(L(0)=',') M='T' #=^_endAnalyze
12250     ;=(L(0)='?') ;=(L(1)='T') K=1 M='M' #=^_endAnalyze : 先頭コメント
12260     ;=(L(0)='?') ;=(L(1)='B') K=2 M='M' #=^_endAnalyze : 末尾コメント
12270     #=^_endAnalyze
12280   : <pre> または <hr /> または <ul>
12290   ^_pre_hr
12300     i=0 @ i=i+1 @=((L(i)<>'-')|(i>5))
12310     : pre内で開始タグと同じレベルならばpre終了
12320     ;=(L(i)=')')&(b=i) M='b' b=0 C=i #=^_endAnalyze
12330     : pre タグ内ならば何もしない
12340     ;=b>0 #=^_endAnalyze
12350     : pre タグ内でなければ pre 開始
12360     ;=(L(i)='(') M='B' b=i C=i #=^_endAnalyze
12370     ;=L(i)='.' M='R' C=i #=^_endAnalyze                : 改行
12380     ;=(i=4) M='L' C=i #=^_endAnalyze                   : 水平線
12390     ;=(i<4) M='U' C=i #=^_endAnalyze                   : リスト
12400     #=^_endAnalyze
12410   : 見出し
12420   ^_header
12430     i=0 @ i=i+1 @=((L(i)<>'*')|(i>6))
12440     ;=(i<7) M='C' C=i #=^_endAnalyze
12450     #=^_endAnalyze
12460   ^_jp_header
12470     ;=(L(1)=$98)&(L(2)=$85) M='C' C=1 c=3 #=^_endAnalyze
12480     ;=(L(1)=$96)&(L(2)=$A0) M='C' C=2 c=3 #=^_endAnalyze
12490     ;=(L(1)=$97)&(L(2)=$8F) M='C' C=3 c=3 #=^_endAnalyze
12500     ;=(L(1)=$97)&(L(2)=$B6) M='C' C=4 c=3 #=^_endAnalyze
12510     ;=(L(1)=$96)&(L(2)=$B2) M='C' C=5 c=3 #=^_endAnalyze
12520     ;=(L(1)=$98)&(L(2)=$86) M='C' C=6 c=3 #=^_endAnalyze
12530     #=^_endAnalyze
12540   : 空白
12550   ^_space
12560     i=0 @ i=i+1 @=((L(i)<>' ')|(i>4))
12570     : 空白2つ以上で前がリストなら継続行
12580     ;=(i>=2)&((W='U')|(W='u')) M='u' #=^_endAnalyze    : <li>の継続行
12590     : 空白2つ以下なら通常行
12600     ;=(i<3) #=^_endAnalyze
12610     : 空白3つ以上なら整形済み(verbatim-code)
12620     M='Y' C=2 #=^_endAnalyze
12630   ^_endAnalyze
12640     ;=c>0 P=L+c
12650     ;=c=0 P=L+C
12660     -ci
12670 ]
12680 :
12690 : ----------------------------------------------------------
12700 :  OutPut One Line １行出力
12710 :     (in) L : アクセス中の行の先頭アドレス
12720 :     (in) M : アクセス中の行のモード
12730 :     (io) W : 直前の行のモード
12740 :     (in) S : アクセス中の行の長さ
12750 :     (io) P : アクセス中の行のカーソル位置
12760 :     (lc) Q : 行出力済みフラグ (1:YES, 0:NO)
12770 : ----------------------------------------------------------
12780 ^outputOneLine
12790   :Clean Up
12800     ;=(M<>'T') !=^setTableEndTag
12810     ;=(M<>'D') !=^setDefEndTag
12820     ;=(M<>'u') !=^setLIEndTag
12830     ;=(M<>'U')&(M<>'u') !=^setListEndTag
12840     ;=(M<>'G') !=^setParaEndTag
12850     ;=(M<>'Y') !=^setCodeEndTag
12860   :Main
12870     : "(" $=M ")"
12880     ;=(M='B') !=^setOpenVerb     #=^_outputOneLine
12890     ;=(M='b') !=^setCloseVerb    #=^_outputOneLine
12900     ;=(M='R') !=^setNewLine      #=^_outputOneLine
12910     ;=(M='E')&(W='E') !=^setNewLine    #=^_outputOneLine
12920     ;=(M='Y') !=^setCodeTag      #=^_outputOneLine
12930     ;=(B)     P=L                #=^_outputOneLine
12940     ;=(M='G') !=^setParaRow      #=^_outputOneLine
12950     ;=(M='U') !=^setListItemRow  #=^_outputOneLine
12960     ;=(M='u')&(B<2) !=^setListContinue #=^_outputOneLine
12970     ;=(M='L') !=^setHoriRuleTag  #=^_outputOneLine
12980     ;=(M='T') !=^setTableRow     #=^_outputOneLine
12990     ;=(M='D') !=^setDefRow       #=^_outputOneLine
13000     ;=(M='C') !=^setCaptionTag   #=^_outputOneLine
13010     ;=(M='M') Q=1
13020   ^_outputOneLine
13030     ;=(Q=0) !=^outputLineData /
13040 ]
13050 :
13060 : ----------------------------------------------------------
13070 :  行データの残りを標準出力に書き出し
13080 :     (in) V : URLなどが含まれていそうな行
13090 :     (in) P : アクセス中の行のカーソル位置
13100 : ----------------------------------------------------------
13110 ^outputLineData
13120     ;=(P(0)=0) #=^_outputLineData
13130     ;=(V=0)|(B=3) $*=P #=^_outputLineData
13140     @
13150       ;=(V&2)<>0 ;=(P(0)=$27)&(P(1)=$27) !=^quoteString #=^old00
13160       ;=(P(0)='[')&(P(1)='[')&(P(2)='[') !=^insertImg #=^old00
13170       ;=(P(0)='[')&(P(1)='[') !=^quoteURL #=^old00
13180       ;=(P(0)='h')&(P(1)='t')&(P(2)='t')&(P(3)='p') !=^quoteURL2 #=^old00
13190       $=P(0)
13200      ^old00
13210       P=P+1
13220     @=(P(0)=0)
13230   ^_outputLineData
13240 ]
13250 :
13260 : ----------------------------------------------------------
13270 : URL引用
13280 :  (in) P : 候補文字列の先頭
13290 : ----------------------------------------------------------
13300 ^quoteURL
13310     +tu
13320     t=P+2
13330     u=t-1
13340     @ u=u+1 @=((u(0)='|')|(u(0)=']')|(u(0)=0))
13350     u=u+1 ;=u(-1)=']' "[" -tu ]
13360     "<a href='"
13370     @ $=u(0) u=u+1 @=((u(0)=']')|(u(0)=0))
13380     u=u+1
13390     "'>"
13400     @ $=t(0) t=t+1 @=((t(0)='|')|(t(0)=0))
13410     "</a>"
13420     P=u
13430     -ut
13440 ]
13450 :
13460 : ----------------------------------------------------------
13470 : http: から空白の前までをリンクとして出力
13480 : (in) P : 候補文字列の先頭
13490 : ----------------------------------------------------------
13500 ^quoteURL2
13510     +pi
13520     p=P+4
13530     ;=p(0)<>':' "h" -ip ]
13540     p=p+1
13550     "<a href='http:"
13560     @
13570       $=p(0)
13580       p=p+1
13590     @=((p(0)=' ')|(p(0)=0))
13600     "'>"
13610     i=P
13620     @
13630       $=i(0)
13640       i=i+1
13650     @=(i=p)
13660     "</a>"
13670     P=p
13680     -ip
13690 ]
13700 :
13710 : ----------------------------------------------------------
13720 : 画像挿入
13730 :  (in) P : 候補文字列の先頭
13740 :  (in) E : テキスト最終位置
13750 : ----------------------------------------------------------
13760 ^insertImg
13770     +t
13780     t=P+3
13790     "<img alt='"
13800     @ $=t(0) t=t+1 @=((t(0)='|')|(t(0)=0))
13810     t=t+1
13820     "' src='"
13830     @ $=t(0) t=t+1 @=((t(0)=']')|(t(0)=0))
13840     "'>"
13850     P=t+2
13860     -t
13870 ]
13880 :
13890 : ----------------------------------------------------------
13900 : quote
13910 :  (in) P : 候補文字列の先頭
13920 :  (in) E : テキスト最終位置
13930 : ----------------------------------------------------------
13940 ^quoteString
13950     +pc
13960     p=P+2
13970     ;=p(1)=$27) c=p(0) #=^ColorString
13980     ;=p(0)=$27 #=^quote2String
13990     "<span class='quote1'>"
14000     @
14010       $=p(0)
14020       p=p+1
14030     @=(((p(0)=$27)&(p(1)=$27))|(p(0)=0))
14040     "</span>"
14050     P=p+1
14060     -cp
14070 ]
14080 ^quote2String
14090     p=P+3
14100     "<span class='quote2'>"
14110     @
14120       $=p(0)
14130       p=p+1
14140     @=(((p(0)=$27)&(p(1)=$27)&(p(2)=$27))|(p(0)=0))
14150     "</span>"
14160     P=p+2
14170     -cp
14180 ]
14190 : 文字色の指定用 span ''c' ____ ''''
14200 ^ColorString
14210     p=P+4
14220     ;=c='r' "<span class='red'>"    #=^_ColorString
14230     ;=c='g' "<span class='green'>"  #=^_ColorString
14240     ;=c='b' "<span class='blue'>"   #=^_ColorString
14250     ;=c='c' "<span class='cyan'>"   #=^_ColorString
14260     ;=c='m' "<span class='magenta'>" #=^_ColorString
14270     ;=c='y' "<span class='yellow'>" #=^_ColorString
14280     ;=c='w' "<span class='white'>"  #=^_ColorString
14290     ;=c='0' "<span class='bblack'>" #=^_ColorString
14300     ;=c='1' "<span class='bblue'>"  #=^_ColorString
14310     ;=c='2' "<span class='bgreen'>" #=^_ColorString
14320     ;=c='3' "<span class='bcyan'>"  #=^_ColorString
14330     ;=c='4' "<span class='bred'>"   #=^_ColorString
14340     ;=c='5' "<span class='bmagenta'>" #=^_ColorString
14350     ;=c='6' "<span class='byellow'>" #=^_ColorString
14360     ;=c='7' "<span class='bwhite'>" #=^_ColorString
14370     ;=c='9' "<span class='lgreen'>" #=^_ColorString
14380     ;=c='B' "<span class='iblue'>"  #=^_ColorString
14390     ;=c='G' "<span class='igreen'>" #=^_ColorString
14400     ;=c='C' "<span class='icyan'>"  #=^_ColorString
14410     ;=c='R' "<span class='ired'>"   #=^_ColorString
14420     ;=c='M' "<span class='imagenta'>" #=^_ColorString
14430     ;=c='Y' "<span class='iyellow'>" #=^_ColorString
14440     ;=c='L' "<span class='iblack'>" #=^_ColorString
14450     ;=c='W' "<span class='iwhite'>"
14460  ^_ColorString
14470     @
14480       $=p(0)
14490       p=p+1
14500     @=(((p(0)=$27)&(p(1)=$27)&(p(2)=$27)&(p(3)=$27))|(p(0)=0))
14510     "</span>"
14520     P=p+3
14530     -cp
14540 ]
14550 :
14560 : ----------------------------------------------------------
14570 :  Set Horizontal Rule Tag <hr />の出力
14580 :     (in) L : アクセス中の行の先頭アドレス
14590 :     (io) P : アクセス中の行のカーソル位置
14600 :     (io) Q : 行出力済みフラグ (1:YES, 0:NO)
14610 : ----------------------------------------------------------
14620 ^setHoriRuleTag
14630     ;=P(0) P=L #=^_setHoriRuleTag
14640     "<hr />" /
14650     Q=1
14660   ^_setHoriRuleTag
14670 ]
14680 :
14690 : ----------------------------------------------------------
14700 :  Set Table End Tag </table>の出力
14710 :     (io) T : テーブルの作成中フラグ (1:YES, 0:NO)
14720 : ----------------------------------------------------------
14730 ^setTableEndTag
14740     ;=T "</table>" / T=0
14750 ]
14760 :
14770 : ----------------------------------------------------------
14780 :  Set Definition List End Tag </dl>の出力
14790 :     (io) D : 定義リストの作成中フラグ (1:YES, 0:NO)
14800 : ----------------------------------------------------------
14810 ^setDefEndTag
14820     ;=D "</dl>" / D=0
14830 ]
14840 :
14850 : ----------------------------------------------------------
14860 :  Set Paragraph Row 段落行の出力
14870 :     (io) G : 段落の作成中フラグ (1:YES, 0:NO)
14880 : ----------------------------------------------------------
14890 ^setParaRow
14900     ;=(G=0) "<p>" / G=1
14910     !=^outputLineData /
14920     Q=1
14930 ]
14940 :
14950 : ----------------------------------------------------------
14960 :  Set Paragraph End Tag </p>の出力
14970 :     (io) G : 段落の作成中フラグ (1:YES, 0:NO)
14980 : ----------------------------------------------------------
14990 ^setParaEndTag
15000     ;=G "</p>" / G=0
15010 ]
15020 :
15030 : ----------------------------------------------------------
15040 :  Set Pre End Tag </pre>の出力
15050 :     (io) W : 前のタグ
15060 : ----------------------------------------------------------
15070 ^setCodeEndTag
15080     ;=W='Y' "</pre>" /
15090 ]
15100 :
15110 : ----------------------------------------------------------
15120 :  Set List Item Row <li>行の出力
15130 :     (io) Q : 行出力済みフラグ (1:YES, 0:NO)
15140 : ----------------------------------------------------------
15150 ^setListItemRow
15160     ;=(C<>U) !=^setListStartTag
15170     ;=(W='u') "</li>" /
15180     "<li>"
15190     R=1
15200 ]
15210 :
15220 : ----------------------------------------------------------
15230 :  Set List Item 継続行の出力
15240 :     (io) Q : 行出力済みフラグ (1:YES, 0:NO)
15250 : ----------------------------------------------------------
15260 ^setListContinue
15270     R=1
15280 ]
15290 :
15300 : ----------------------------------------------------------
15310 :  Set List End Tag </pre>の出力
15320 :     (io) W : 前のタグ
15330 : ----------------------------------------------------------
15340 ^setLIEndTag
15350     ;=((W='U')|(W='u')) "</li>" / R=0
15360 ]
15370 :
15380 : ----------------------------------------------------------
15390 :  Set List Start Tag <ul>,</ul>の出力
15400 :     U :
15410 : ----------------------------------------------------------
15420 ^setListStartTag
15430     @
15440       ;=(C>U) U=U+1 "<ul>" /
15450       ;=(C<U) U=U-1 "</ul>" /
15460     @=(C=U)
15470 ]
15480 :
15490 : ----------------------------------------------------------
15500 :  Set List End Tag </ul>の出力
15510 :     U :
15520 : ----------------------------------------------------------
15530 ^setListEndTag
15540     ;=(U=0) #=^_setListEndTag
15550     @
15560       U=U-1 "</ul>" /
15570     @=(U=0)
15580   ^_setListEndTag
15590 ]
15600 :
15610 : ----------------------------------------------------------
15620 :  Set Verbatim Tag <pre>タグの出力
15630 :     (in) B :
15640 :     (in) C :
15650 :     (in) L : アクセス中の行の先頭アドレス
15660 :     (io) Q : 行出力済みフラグ (1:YES, 0:NO)
15670 : ----------------------------------------------------------
15680 ^setOpenVerb
15690     : "(pre " ?=B "," ?=C ")"
15700     ;=((B>0)&(L(C)='(')) P=L #=^_setVerbTag
15710     ;=((B=0)&(L(C)=')')) P=L #=^_setVerbTag
15720     ;=((B>0)&(B<>C)) P=L #=^_setVerbTag
15730     ;=(C=2) "<pre class='verbatim-soft'>"   B=C / Q=1 #=^_setVerbTag
15740     ;=(C=3) "<pre class='verbatim-hard'>"   B=C / Q=1 #=^_setVerbTag
15750     ;=(C=4) "<pre class='verbatim-code'>"   B=C / Q=1 #=^_setVerbTag
15760     ;=(C=5) "<pre class='verbatim-screen'>" B=C / Q=1 #=^_setVerbTag
15770   ^_setVerbTag
15780 ]
15790 :
15800 ^setCloseVerb
15810     "</pre>" / B=0 Q=1
15820 ]
15830 :
15840 ^setNewLine
15850     "<br />" Q=1 /
15860 ]
15870 :
15880 : ----------------------------------------------------------
15890 :  Set Code Tag <pre>タグの出力
15900 :     (in) B :
15910 :     (in) C :
15920 :     (in) L : アクセス中の行の先頭アドレス
15930 :     (io) Q : 行出力済みフラグ (1:YES, 0:NO)
15940 : ----------------------------------------------------------
15950 ^setCodeTag
15960     ;=(W<>'Y')&(B=0) "<pre class='verbatim-code'>" /
15970     !=^outputLineData /
15980     Q=1
15990 ]
16000 :
16010 : ----------------------------------------------------------
16020 :  Set Caption Tag <h?>タグの出力
16030 :     (in) C :
16040 :     (io) J :
16050 :     (io) Q : 行出力済みフラグ (1:YES, 0:NO)
16060 : ----------------------------------------------------------
16070 ^setCaptionTag
16080     / "<h" ?=C+1 "><a id='i" ?=J "'> </a>"
16090     !=^outputLineData
16100     "</h" ?=C+1 ">" /
16110     J=J+1 Q=1
16120 ]
16130 :
16140 : ----------------------------------------------------------
16150 :  Set Table Row テーブル行の出力
16160 :     L : アクセス中の行の先頭アドレス
16170 :     P : アクセス中の行のカーソル位置
16180 :     Q : アクセス中の行の出力終了 (YES or NO)
16190 :     S : アクセス中の行の長さ
16200 :     T : テーブルの作成中フラグ
16210 : ----------------------------------------------------------
16220 ^setTableRow
16230     ;=(T=0) "<table>" / T=1
16240     :-----------------------------------------
16250     :  c : colspan 算出
16260     :  f : フィールド先頭検出用フラグ
16270     :  h : THフラグ (YES/NO)
16280     :  i : 行の処理中アドレス
16290     :  b : 行先頭
16300     :  p : フィールド先頭を記録
16310     :  n : フィールド文字長
16320     :-----------------------------------------
16330     +cfhibpn
16340     b=L h=0 f=1 n=0
16350     ;=(b(0)='.') h=1
16360     "<tr>"
16370     : 1行を1フィールドづつ処理
16380     p=b+1                           : "," または "."の次から
16390     @
16400       i=-1
16410       @
16420         i=i+1
16430       @=((p(i)=0)|(p(i)=','))
16440       p(i)=0
16450       n=i                           : フィールド末位置を記録
16460       !=^setTableCell               : pにフィールド先頭、iに文字数
16470       p=p+i+1
16480     @=(p>=(b+S))
16490     "</tr>" /
16500     Q=1                             : 行処理終了
16510     -npbihfc
16520 ]
16530 :
16540 : ----------------------------------------------------------
16550 : フィールドの連結(colspan)の検出
16560 : (in)  p : フィールド先頭
16570 : (in)  i : フィールド長
16580 : (in)  b+S : 行末のアドレス
16590 : (out) c : colspanの値
16600 : (out) i : 更新されたフィールド長
16610 : ----------------------------------------------------------
16620 ^getColSpan
16630     +xyz
16640     c=1
16650     ;=(p+n)=(b+S) #=^_getColSpan    : 最終フィールドならc=1で終了
16660     x=z z=z+3
16670     x*="=="
16680     : "==" のフィールドがなくなるまで i を増加させて読み進める
16690     @
16700       y=p+i+1                       : 次フィールド先頭を比較
16710       !=^CompareStr
16720       ;=r=0 #=^gcp00                : 異なればループ脱出
16730       i=i+r+1
16740       @
16750         ;=(p(i)=',')|(p(i)=0) f=1   : フィールド末まで進める
16760         ;=f=0 i=i+1
16770       @=(f=1)
16780       c=c+1                         : colspan++
16790       ^gcp00
16800     @=((r=0)|(p(0)=0))
16810   ^_getColSpan
16820     -zyx
16830 ]
16840 :
16850 : ----------------------------------------------------------
16860 : フィールドの連結(rowspan)の検出
16870 : (in)  p : フィールド先頭
16880 : (in)  i : フィールド文字数
16890 : (out) j : colspanの値
16900 : (out) i : フィールド文字数
16910 : ----------------------------------------------------------
16920 ^getRowSpan
16930     j=0
16940     ;=p(j)<>'|' ]
16950     j=0 @ j=j+1 @=(p(j)<>'|')
16960     p=p+j i=i-j n=i
16970 ]
16980 :
16990 : ----------------------------------------------------------
17000 : テーブルの1フィールド分のタグと内容を出力
17010 : (in) p : フィールド先頭
17020 : (in) c : colspan
17030 : (in) h : <th>フラグ
17040 : ----------------------------------------------------------
17050 ^setTableCell
17060     !=^getColSpan
17070     !=^getRowSpan
17080     +a
17090     a=0                                     : アライン検出
17100     ;=(p(0)=' ')    a=a+2                   : 左側に空白
17110     ;=(p(n-1)=' ')  a=a+1                   : 右側に空白
17120     ;=(h=1)         "<th"
17130     ;=(h=0)         "<td"
17140     ;=(a=2)         " align='right'"
17150     ;=(a=3)         " align='center'"
17160     ;=(c>1)         " colspan='" ?=c "'"
17170     ;=(j>1)         " rowspan='" ?=j "'"
17180     ">" P=p !=^outputLineData               : フィールド内容表示
17190     ;=(h=1)         "</th>"
17200     ;=(h=0)         "</td>"
17210     -a
17220 ]
17230 :
17240 : ----------------------------------------------------------
17250 :  Set Definition Row 定義リスト行の出力
17260 :     D : 定義リストの作成中フラグ (1:YES, 0:NO)
17270 : ----------------------------------------------------------
17280 ^setDefRow
17290     +ci
17300     i=0 c=0
17310     @
17320       i=i+1
17330       ;=(L(i)=':') L(i)=0 c=i
17340     @=((L(i)=0)|(c>0))
17350     ;=(c=0) !=^setDefEndTag P=L #=^_setDefRow
17360     ;=(D=0) "<dl>" / D=1
17370     P=L+1
17380     "<dt>" !=^outputLineData "</dt>"
17390     P=L+c+1
17400     "<dd>" !=^outputLineData "</dd>" /
17410     Q=1
17420   ^_setDefRow
17430     -ic
17440 ]
17450 :
17460 : ----------------------------------------------------------
17470 :  目次の出力
17480 : ----------------------------------------------------------
17490 ^setIndexRow
17500     +i
17510     ;=H<C .=C*2 "<ul>" /
17520     ;=H>C i=C @ "</ul>" / i=i+1 @=(i=H)
17530     .=C*2  "<li><a href='#i" ?=J "'>" !=^outputLineData "</a></li>" /
17540     J=J+1
17550     H=C
17560     -i
17570 ]
17580 :
#=1
~

